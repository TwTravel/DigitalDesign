<html>
<head>
<title>ECE 5760: Graphics Processing Unit</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<style type="text/css">
<!--

a:link {  color: #FFFFFF; text-decoration: none}

a:visited {  text-decoration: none; color: #FFCC66}

a:hover {  color: #99CCFF; text-decoration: underline}
body {  font-family: "Arial", "Helvetica", "sans-serif"}
.style2 {font-size: 36px}
.style3 {font-family: Arial, Helvetica, sans-serif}
  <script src="/js-global/FancyZoom.js" language="JavaScript" type="text/javascript"></script>
  <script src="/js-global/FancyZoomHTML.js" language="JavaScript" type="text/javascript"></script>
-->
</style>
</head>

<body onload="setupZoom();">
<table background="image/top.gif" width="700" border="0" cellspacing="0" cellpadding="0" height="75" align="center" > 
<tr background="image/top.gif"> <td colspan="2"><span class="style2">ECE 5760: Graphics Processing Unit<FONT FACE="Tahoma">
  </FONT><FONT FACE="Tahoma"></FONT></span></td>
</tr> 
</table><table width="700" border="0" cellspacing="0" cellpadding="0" height="20" align="center"> 
<tr bgcolor="#000000"> <td BGCOLOR="#336666"> <div align="center"> 
  <font color="#FFFFFF" face="Tahoma">|</font><font face="Tahoma"> <font color="#FFFFFF"><a href="introduction.htm">Introduction</a>  |</font> <font color="#FFFFFF"><a href="highleveldesign.htm">High Level Design</a> </font> <font color="#FFFFFF">|</font> <font color="#FFFFFF"><a href="hardwaredesign.html">Hardware Design</a> </font> <font color="#FFFFFF">| <a href="results.htm">Results</a> | <a href="conclusion.htm">Conclusion</a> | <a href="appendix.htm">Appendix</a> | </font></font></div></td></tr> </table><table width="700" border="0" cellspacing="0" cellpadding="0" height="13" background="image/top1.gif" align="center"> 
<tr> <td><FONT FACE="Tahoma"><img src="image/pixel.gif" width="1" height="1"></FONT></td></tr> 
</table><FONT FACE="Tahoma"><br> </FONT><table width="700" border="0" cellspacing="0" cellpadding="0" align="center"> 
<tr> <td valign="top" width="245"> <table width="215" border="0" cellspacing="0" cellpadding="0"> 
<tr> <td colspan="3" height="28" background="image/menuup.gif"> <div align="center"><FONT COLOR="#FFFFFF" FACE="Tahoma"><b>
    Links</b></FONT></div></td></tr> <tr> <td width="9" height="76" background="image/menuleft.gif">&nbsp;</td>
	<td width="194" height="76"> 
<FONT FACE="Tahoma"><img src="image/dot.gif" width="65" height="18"> <a href="../../../../../../../../instruct1.cit.cornell.edu/Courses/ece576/default.htm"><font color=#000000>ECE 5760</font></a> <br> 
<img height=18 src="image/dot.gif" width=65> <a href="../../../../../../../../www.cs.cornell.edu/courses/cs465/2007fa/default.htm"><font color=#000000>CS 465 </font></a><br> 
<img height=18 src="image/dot.gif" width=65> <a href="../../../../../../../../www.terasic.com.tw/cgi-bin/page/archive.pl@Language=English&CategoryNo=39&No="><font color=#000000>Terasic </font></a><br></FONT></td>
  <td width="12" height="76" background="image/menuright.gif">&nbsp;</td></tr> 
<tr> <td colspan="3" height="28" background="image/menudown.gif">&nbsp;</td></tr> </table><FONT FACE="Tahoma"><br> 
</FONT><table width="215" border="0" cellspacing="0" cellpadding="0"> <tr> <td colspan="3" height="28" background="image/menuup.gif"> 
<div align="center"><b><font face="Tahoma" color="#FFFFFF">Authors</font></b></div></td></tr> 
<tr> <td width="9" height="137" background="image/menuleft.gif">&nbsp;</td>
<td width="194" height="137"><p align="center" class="style3">Amit Penmetcha (ap328)</p>
  <p align="center">Shane J. Pryor (sjp45) </p></td>
<td width="12" height="137" background="image/menuright.gif">&nbsp;</td></tr> 
<tr> <td colspan="3" height="28" background="image/menudown.gif">&nbsp;</td></tr> </table></td><td width="455" valign="top"> 
<table width="455" border="0" cellspacing="0" cellpadding="0" background="image/longmenu.gif" height="34"> 
<tr> <td><b><font face="Tahoma">Results</font></b></td>
</tr> </table>
<p>Here are some sample pictures of what we were able to render: </p>
<p><a href="Pictures/DSC05047.JPG"><img src="Pictures/DSC05047.JPG" width="98" height="98" border="0"></a><a href="Pictures/DSC05048.JPG"><img src="Pictures/DSC05048.JPG" width="93" height="99" border="0"></a><a href="Pictures/DSC05049.JPG"><img src="Pictures/DSC05049.JPG" width="102" height="97" border="0"></a><a href="Pictures/DSC05050.JPG"><img src="Pictures/DSC05050.JPG" width="86" height="98" border="0"></a><a href="Pictures/DSC05051.JPG"><img src="Pictures/DSC05051.JPG" width="101" height="114" border="0"></a><a href="Pictures/DSC05052.JPG"><img src="Pictures/DSC05052.JPG" width="113" height="113" border="0"></a><a href="Pictures/DSC05053.JPG"><img src="Pictures/DSC05053.JPG" width="104" height="114" border="0"></a><a href="Pictures/DSC05055.JPG"><img src="Pictures/DSC05055.JPG" width="97" height="113" border="0"></a></p>
<p>&nbsp;</p>
<p><font face="Tahoma">The following models were rendered with flat shading and lower color depth:</font></p>
<p><a href="Pictures/DSC05056.JPG"><img src="Pictures/DSC05056.JPG" width="133" height="138" border="0"></a><a href="Pictures/DSC05057.JPG"><img src="Pictures/DSC05057.JPG" width="133" height="138" border="0"></a></p>
<p>&nbsp;</p>
<p><em><strong>Execution:</strong></em></p>
<p>The program is able to render all of the above images in less than a second. The original goal was to be able to render at several frames per second. This was possible using small objects such as a few triangles, a cube, etc. However once we started using the objects that were 500-1000 triangles, the frame rate began to slow down to 2-3 frames per second. That is, we could draw an image on the screen in a half to a third of a second depending on how many triangles there were. This amount of time is enough to notice a few of the triangles appearing on the screen, but it seems close to instantaneous. There is no noticeable flicker associated with the output on the VGA as far as we could see.</p>
<p>The models are interactive in the sense the user can rotate the camera around and see the model from 8 different views. This is shown in the images above with the different angles of the rabbit. When the user selected to move the camera with the push buttons, the screen would clear and the new image would display in the same amount of time as described above.</p>
<p>There are a few small glitches still in this program. The interpolative shading works correctly in most cases, but not all. As seen in the sonic image on the right, we have some precision issues with our z-buffer. You can see this with multiple colors in the same pixel where different parts of his body meet at the same vertices. You can also see this where his white eyes appear directly in front of, and in contact with, his blue head. There is some mixing of white and blue on his right eye.</p>
<p>One interesting thing was that whenever we wrote our own input files for small objects, each triangle was interpolated correctly and did not affect neighboring triangles. However when we went to larger objects that we obtained through other sources, there would be small glitches. Neighboring triangles would be of a different shade of color, although the overall interpolating seemed to still work. </p>
<p><em><strong>Accuracy / Board Usage:</strong></em></p>
<p>The project is limited in some ways by the DE2 board as far as accuracy. Combined between the M4K blocks and the SRAM (the sets of memory that have a 1 cycle latency for reading and writing), we were able to obtain 21 bits per pixel to store z-buffer and color information. This gave us a trade-off decision between how much to store for color and how much to store for z-buffer. In order to make the interpolative shading actually be able to produce a wide range of colors, we decided to make the color depth 14 bits. The 7 bit z-buffer then proved to be an issue in some cases, as described above.</p>
<p>The board has 70 built-in 9-bit hardware multipliers. This limits the number of multiplications we could do. First, this limits the amount of parallelization we could do. Initially, we considered making multiple units in parallel to speed up computation; however, once the hardware was finished, we were using up to 66 multipliers if an object used all 3 color bands, had a camera, etc. This prevented us from implementing multiple GPUs in parallel.</p>
<p>Our models took up anywhere between 13,000 and 30,000 logic elements on the board. The baseline hardware took up the 13,000, but the LUTs for each object took up the rest. This limited the size of the object we wanted to do, but we were going for performance. If we had placed the object data in another source, such as SDRAM or FLASH, the latency would have been significantly higher. As mentioned, we used the M4K for z-buffer storage. This took up 90 blocks of M4K for 5 bits of the z-buffer value. The other two were stored in SRAM. Finally, we used 1 PLL to accurately time the clock for the VGA monitor. This clock rate is the clock for which the entire GPU ran. </p>
<p>&nbsp;</p></td></tr> </table>
<FONT FACE="Tahoma"><br> </FONT><table width="700" border="0" cellspacing="0" cellpadding="0" align="center"> 
<tr> <td> <div align="left"></div><DIV ALIGN="CENTER"></DIV>
<TABLE WIDTH="700" BORDER="0" CELLSPACING="0" CELLPADDING="0" HEIGHT="20" ALIGN="center"> 
<TR BGCOLOR="#000000"> <TD BGCOLOR="#336666">&nbsp;</TD></TR> </TABLE></td></tr> 
</table><FONT FACE="Tahoma"></FONT> 
</body>
</html>

			<center>&nbsp;</center><br><br>