--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_tma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1651w[1..0]	: WIRE;
	w_anode1660w[3..0]	: WIRE;
	w_anode1677w[3..0]	: WIRE;
	w_anode1687w[3..0]	: WIRE;
	w_anode1697w[3..0]	: WIRE;
	w_anode1707w[3..0]	: WIRE;
	w_anode1717w[3..0]	: WIRE;
	w_anode1727w[3..0]	: WIRE;
	w_anode1737w[3..0]	: WIRE;
	w_anode1749w[1..0]	: WIRE;
	w_anode1756w[3..0]	: WIRE;
	w_anode1767w[3..0]	: WIRE;
	w_anode1777w[3..0]	: WIRE;
	w_anode1787w[3..0]	: WIRE;
	w_anode1797w[3..0]	: WIRE;
	w_anode1807w[3..0]	: WIRE;
	w_anode1817w[3..0]	: WIRE;
	w_anode1827w[3..0]	: WIRE;
	w_data1649w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1827w[3..3], w_anode1817w[3..3], w_anode1807w[3..3], w_anode1797w[3..3], w_anode1787w[3..3], w_anode1777w[3..3], w_anode1767w[3..3], w_anode1756w[3..3]), ( w_anode1737w[3..3], w_anode1727w[3..3], w_anode1717w[3..3], w_anode1707w[3..3], w_anode1697w[3..3], w_anode1687w[3..3], w_anode1677w[3..3], w_anode1660w[3..3]));
	w_anode1651w[] = ( (w_anode1651w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1660w[] = ( (w_anode1660w[2..2] & (! w_data1649w[2..2])), (w_anode1660w[1..1] & (! w_data1649w[1..1])), (w_anode1660w[0..0] & (! w_data1649w[0..0])), w_anode1651w[1..1]);
	w_anode1677w[] = ( (w_anode1677w[2..2] & (! w_data1649w[2..2])), (w_anode1677w[1..1] & (! w_data1649w[1..1])), (w_anode1677w[0..0] & w_data1649w[0..0]), w_anode1651w[1..1]);
	w_anode1687w[] = ( (w_anode1687w[2..2] & (! w_data1649w[2..2])), (w_anode1687w[1..1] & w_data1649w[1..1]), (w_anode1687w[0..0] & (! w_data1649w[0..0])), w_anode1651w[1..1]);
	w_anode1697w[] = ( (w_anode1697w[2..2] & (! w_data1649w[2..2])), (w_anode1697w[1..1] & w_data1649w[1..1]), (w_anode1697w[0..0] & w_data1649w[0..0]), w_anode1651w[1..1]);
	w_anode1707w[] = ( (w_anode1707w[2..2] & w_data1649w[2..2]), (w_anode1707w[1..1] & (! w_data1649w[1..1])), (w_anode1707w[0..0] & (! w_data1649w[0..0])), w_anode1651w[1..1]);
	w_anode1717w[] = ( (w_anode1717w[2..2] & w_data1649w[2..2]), (w_anode1717w[1..1] & (! w_data1649w[1..1])), (w_anode1717w[0..0] & w_data1649w[0..0]), w_anode1651w[1..1]);
	w_anode1727w[] = ( (w_anode1727w[2..2] & w_data1649w[2..2]), (w_anode1727w[1..1] & w_data1649w[1..1]), (w_anode1727w[0..0] & (! w_data1649w[0..0])), w_anode1651w[1..1]);
	w_anode1737w[] = ( (w_anode1737w[2..2] & w_data1649w[2..2]), (w_anode1737w[1..1] & w_data1649w[1..1]), (w_anode1737w[0..0] & w_data1649w[0..0]), w_anode1651w[1..1]);
	w_anode1749w[] = ( (w_anode1749w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1756w[] = ( (w_anode1756w[2..2] & (! w_data1649w[2..2])), (w_anode1756w[1..1] & (! w_data1649w[1..1])), (w_anode1756w[0..0] & (! w_data1649w[0..0])), w_anode1749w[1..1]);
	w_anode1767w[] = ( (w_anode1767w[2..2] & (! w_data1649w[2..2])), (w_anode1767w[1..1] & (! w_data1649w[1..1])), (w_anode1767w[0..0] & w_data1649w[0..0]), w_anode1749w[1..1]);
	w_anode1777w[] = ( (w_anode1777w[2..2] & (! w_data1649w[2..2])), (w_anode1777w[1..1] & w_data1649w[1..1]), (w_anode1777w[0..0] & (! w_data1649w[0..0])), w_anode1749w[1..1]);
	w_anode1787w[] = ( (w_anode1787w[2..2] & (! w_data1649w[2..2])), (w_anode1787w[1..1] & w_data1649w[1..1]), (w_anode1787w[0..0] & w_data1649w[0..0]), w_anode1749w[1..1]);
	w_anode1797w[] = ( (w_anode1797w[2..2] & w_data1649w[2..2]), (w_anode1797w[1..1] & (! w_data1649w[1..1])), (w_anode1797w[0..0] & (! w_data1649w[0..0])), w_anode1749w[1..1]);
	w_anode1807w[] = ( (w_anode1807w[2..2] & w_data1649w[2..2]), (w_anode1807w[1..1] & (! w_data1649w[1..1])), (w_anode1807w[0..0] & w_data1649w[0..0]), w_anode1749w[1..1]);
	w_anode1817w[] = ( (w_anode1817w[2..2] & w_data1649w[2..2]), (w_anode1817w[1..1] & w_data1649w[1..1]), (w_anode1817w[0..0] & (! w_data1649w[0..0])), w_anode1749w[1..1]);
	w_anode1827w[] = ( (w_anode1827w[2..2] & w_data1649w[2..2]), (w_anode1827w[1..1] & w_data1649w[1..1]), (w_anode1827w[0..0] & w_data1649w[0..0]), w_anode1749w[1..1]);
	w_data1649w[2..0] = data_wire[2..0];
END;
--VALID FILE
